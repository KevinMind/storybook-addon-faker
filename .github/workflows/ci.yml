name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    name: Build, Test
    timeout-minutes: 15
    strategy:
      matrix:
        version: [16, 18, 19]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.sha}}
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.version }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build

      - name: Test
        run: yarn run test

  changeset:
    name: Check changeset
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.sha}}
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Changeset
        if: ${{ !contains(github.head_ref, 'changeset-release/main') }}
        run: |
          echo ${{github.head_ref}}
          echo ${{ !contains(github.head_ref, 'changeset-release/main') }}
          npm install @changesets/cli
          npx changeset status --since origin/main

  deploy-status:
    runs-on: ubuntu-latest
    needs: [build, changeset]
    if: always()
    steps:
      - name: Successful build
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failing build
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
